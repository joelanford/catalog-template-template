{
    "schema": "olm.package",
    "name": "cockroachdb",
    "defaultChannel": "stable"
}
{
    "schema": "olm.channel",
    "name": "stable",
    "package": "cockroachdb",
    "entries": [
        {
            "name": "cockroachdb.v2.1.1"
        },
        {
            "name": "cockroachdb.v2.1.11",
            "replaces": "cockroachdb.v2.1.1"
        },
        {
            "name": "cockroachdb.v3.0.7",
            "replaces": "cockroachdb.v2.1.11",
            "skipRange": "<3.0.7-0"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "cockroachdb.v2.1.1",
    "package": "cockroachdb",
    "image": "example.com/myrepo/cockroachdb-bundle@sha256:d228db01184302d211c9502e0bdcdcacd1e136ce5b8d5599847a7fe7629ab272",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "charts.helm.k8s.io",
                "kind": "Cockroachdb",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.maxOpenShiftVersion",
            "value": "4.8"
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cockroachdb",
                "version": "2.1.1"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[{\"apiVersion\":\"charts.helm.k8s.io/v1alpha1\",\"kind\":\"Cockroachdb\",\"metadata\":{\"name\":\"example-cockroachdb\"},\"spec\":{\"CacheSize\":\"25%\",\"ClusterDomain\":\"cluster.local\",\"Component\":\"cockroachdb\",\"ExternalGrpcName\":\"grpc\",\"ExternalGrpcPort\":26257,\"ExternalHttpPort\":8080,\"HttpName\":\"http\",\"Image\":\"cockroachdb/cockroach\",\"ImagePullPolicy\":\"Always\",\"ImageTag\":\"v2.1.5\",\"InternalGrpcName\":\"grpc\",\"InternalGrpcPort\":26257,\"InternalHttpPort\":8080,\"JoinExisting\":[],\"Locality\":\"\",\"MaxSQLMemory\":\"25%\",\"MaxUnavailable\":1,\"Name\":\"cockroachdb\",\"NetworkPolicy\":{\"AllowExternal\":true,\"Enabled\":false},\"NodeSelector\":{},\"PodManagementPolicy\":\"Parallel\",\"Replicas\":3,\"Resources\":{},\"Secure\":{\"Enabled\":false,\"RequestCertsImage\":\"cockroachdb/cockroach-k8s-request-cert\",\"RequestCertsImageTag\":\"0.4\",\"ServiceAccount\":{\"Create\":true,\"Name\":null}},\"Service\":{\"annotations\":{},\"type\":\"ClusterIP\"},\"Storage\":\"100Gi\",\"StorageClass\":null,\"Tolerations\":{},\"UpdateStrategy\":{\"type\":\"RollingUpdate\"}}}]",
                    "capabilities": "Basic Install",
                    "categories": "Database",
                    "containerImage": "quay.io/helmoperators/cockroachdb:2.1.1",
                    "createdAt": "2019-01-24T15-33-43Z",
                    "description": "CockroachDB Operator based on the CockroachDB helm chart",
                    "olm.properties": "[{\"type\": \"olm.maxOpenShiftVersion\", \"value\": \"4.8\"}]",
                    "repository": "https://github.com/cockroachdb/cockroach",
                    "support": "a-robinson"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "description": "CockroachDB",
                            "displayName": "cockroachdb",
                            "kind": "Cockroachdb",
                            "name": "cockroachdbs.charts.helm.k8s.io",
                            "resources": [
                                {
                                    "kind": "Deployment",
                                    "name": "",
                                    "version": "v1"
                                },
                                {
                                    "kind": "Service",
                                    "name": "",
                                    "version": "v1"
                                },
                                {
                                    "kind": "ReplicaSet",
                                    "name": "",
                                    "version": "v1"
                                },
                                {
                                    "kind": "Pod",
                                    "name": "",
                                    "version": "v1"
                                },
                                {
                                    "kind": "Secret",
                                    "name": "",
                                    "version": "v1"
                                },
                                {
                                    "kind": "ConfigMap",
                                    "name": "",
                                    "version": "v1"
                                },
                                {
                                    "kind": "StatefulSet",
                                    "name": "",
                                    "version": "apps/v1"
                                }
                            ],
                            "version": "v1alpha1"
                        }
                    ]
                },
                "description": "CockroachDB is a scalable, survivable, strongly-consistent SQL database.\n\n## Core capabilities\n* **StatefulSet** - Sets up a dynamically scalable CockroachDB cluster using a Kubernetes StatefulSet\n* **Expand Replicas** - Supports expanding the set of replicas by simply editing your object\n* **Dashboard** - Installs the CockroachDB user interface to administer your cluster. Easily expose it via an Ingress rule.\n\nReview all of the [confiuguration options](https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration) to best run your database instance.\n\n## Before you start\n\nThis Operator requires a cluster with PV support in order to run correctly.\n\n## About this Operator\n\nThis Operator is based on a Helm chart for CockroachDB. It supports reconfiguration for some parameters, but notably does not handle scale down of the replica count in a seamless manner. Scale up works great.\n",
                "displayName": "CockroachDB",
                "installModes": [
                    {
                        "supported": true,
                        "type": "OwnNamespace"
                    },
                    {
                        "supported": true,
                        "type": "SingleNamespace"
                    },
                    {
                        "supported": false,
                        "type": "MultiNamespace"
                    },
                    {
                        "supported": true,
                        "type": "AllNamespaces"
                    }
                ],
                "keywords": [
                    "cockroach",
                    "cockroachdb",
                    "postgres"
                ],
                "links": [
                    {
                        "name": "Helm Chart Source",
                        "url": "https://github.com/helm/charts/tree/master/stable/cockroachdb"
                    },
                    {
                        "name": "Configuration Options",
                        "url": "https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration"
                    }
                ],
                "maintainers": [
                    {
                        "email": "alex@cockroachlabs.com",
                        "name": "a-robinson"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.8.0",
                "provider": {
                    "name": "Helm Community"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "example.com/myrepo/cockroachdb-bundle@sha256:d228db01184302d211c9502e0bdcdcacd1e136ce5b8d5599847a7fe7629ab272"
        },
        {
            "name": "",
            "image": "quay.io/helmoperators/cockroachdb:v2.1.1"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "cockroachdb.v2.1.11",
    "package": "cockroachdb",
    "image": "example.com/myrepo/cockroachdb-bundle@sha256:f0dbb418f5cd35a3f856d6515a83fe6fe3bd1645bec00222e9ab0a88c51bc062",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "charts.helm.k8s.io",
                "kind": "Cockroachdb",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.maxOpenShiftVersion",
            "value": "4.8"
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cockroachdb",
                "version": "2.1.11"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[{ \"apiVersion\": \"charts.helm.k8s.io/v1alpha1\", \"kind\": \"Cockroachdb\", \"metadata\": { \"name\": \"example\" }, \"spec\": { \"Name\": \"cdb\", \"Image\": \"cockroachdb/cockroach\", \"ImageTag\": \"v19.1.3\", \"ImagePullPolicy\": \"Always\", \"Replicas\": 3, \"MaxUnavailable\": 1, \"Component\": \"cockroachdb\", \"InternalGrpcPort\": 26257, \"ExternalGrpcPort\": 26257, \"InternalGrpcName\": \"grpc\", \"ExternalGrpcName\": \"grpc\", \"InternalHttpPort\": 8080, \"ExternalHttpPort\": 8080, \"HttpName\": \"http\", \"Resources\": { \"requests\": { \"cpu\": \"500m\", \"memory\": \"512Mi\" } }, \"InitPodResources\": { }, \"Storage\": \"10Gi\", \"StorageClass\": null, \"CacheSize\": \"25%\", \"MaxSQLMemory\": \"25%\", \"ClusterDomain\": \"cluster.local\", \"NetworkPolicy\": { \"Enabled\": false, \"AllowExternal\": true }, \"Service\": { \"type\": \"ClusterIP\", \"annotations\": { } }, \"PodManagementPolicy\": \"Parallel\", \"UpdateStrategy\": { \"type\": \"RollingUpdate\" }, \"NodeSelector\": { }, \"Tolerations\": { }, \"Secure\": { \"Enabled\": false, \"RequestCertsImage\": \"cockroachdb/cockroach-k8s-request-cert\", \"RequestCertsImageTag\": \"0.4\", \"ServiceAccount\": { \"Create\": true } } } }]",
                    "capabilities": "Basic Install",
                    "categories": "Database",
                    "certified": "false",
                    "containerImage": "quay.io/helmoperators/cockroachdb:2.1.1",
                    "createdAt": "2019-01-24T15-33-43Z",
                    "description": "CockroachDB Operator based on the CockroachDB helm chart",
                    "olm.properties": "[{\"type\": \"olm.maxOpenShiftVersion\", \"value\": \"4.8\"}]",
                    "repository": "https://github.com/dmesser/cockroachdb-operator",
                    "support": "a-robinson"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "description": "Represents a CockroachDB cluster",
                            "displayName": "CockroachDB",
                            "kind": "Cockroachdb",
                            "name": "cockroachdbs.charts.helm.k8s.io",
                            "resources": [
                                {
                                    "kind": "Deployment",
                                    "name": "",
                                    "version": "v1"
                                },
                                {
                                    "kind": "Service",
                                    "name": "",
                                    "version": "v1"
                                },
                                {
                                    "kind": "ReplicaSet",
                                    "name": "",
                                    "version": "v1"
                                },
                                {
                                    "kind": "Pod",
                                    "name": "",
                                    "version": "v1"
                                },
                                {
                                    "kind": "Secret",
                                    "name": "",
                                    "version": "v1"
                                },
                                {
                                    "kind": "ConfigMap",
                                    "name": "",
                                    "version": "v1"
                                },
                                {
                                    "kind": "StatefulSet",
                                    "name": "",
                                    "version": "apps/v1"
                                }
                            ],
                            "version": "v1alpha1"
                        }
                    ]
                },
                "description": "CockroachDB is a scalable, survivable, strongly-consistent SQL database.\n\n## About this Operator\n\nThis Operator is based on a Helm chart for CockroachDB. It supports reconfiguration for some parameters, but notably does not handle scale down of the replica count in a seamless manner. Scale up works great.\n\n## Core capabilities\n* **StatefulSet** - Sets up a dynamically scalable CockroachDB cluster using a Kubernetes StatefulSet\n* **Expand Replicas** - Supports expanding the set of replicas by simply editing your object\n* **Dashboard** - Installs the CockroachDB user interface to administer your cluster. Easily expose it via an Ingress rule.\n\nReview all of the [confiuguration options](https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration) to best run your database instance. The example configuration is derived from the chart's [`values.yaml`](https://github.com/helm/charts/blob/master/stable/cockroachdb/values.yaml).\n\n## Using the cluster\n\nThe resulting cluster endpoint can be consumed from a `Service` that follows the pattern: `<StatefulSet-name>-public`. For example to connect using the command line client, use something like the following to obtain the name of the service:\n\n```\nkubectl get service -l chart=cockroachdb-2.0.11\nNAME                                           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)              AGE\nexample-9f8ngwzrxbxrulxqmdqfhn51h-cdb          ClusterIP   None             <none>        26257/TCP,8080/TCP   24m\nexample-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public   ClusterIP   10.106.249.134   <none>        26257/TCP,8080/TCP   24m\n```\n\nThen you can use the CockroachDB command line client to connect to the database cluster:\n\n```\nkubectl run -it --rm cockroach-client --image=cockroachdb/cockroach --restart=Never --command -- ./cockroach sql --insecure --host example-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public\n```\n\n## Before you start\n\nThis Operator requires a cluster with PV support in order to run correctly.\n",
                "displayName": "CockroachDB",
                "installModes": [
                    {
                        "supported": true,
                        "type": "OwnNamespace"
                    },
                    {
                        "supported": true,
                        "type": "SingleNamespace"
                    },
                    {
                        "supported": false,
                        "type": "MultiNamespace"
                    },
                    {
                        "supported": true,
                        "type": "AllNamespaces"
                    }
                ],
                "keywords": [
                    "cockroach",
                    "cockroachdb",
                    "postgres"
                ],
                "links": [
                    {
                        "name": "Helm Chart Source",
                        "url": "https://github.com/helm/charts/tree/master/stable/cockroachdb"
                    },
                    {
                        "name": "Configuration Options",
                        "url": "https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration"
                    },
                    {
                        "name": "CockroachDB Source",
                        "url": "https://github.com/cockroachdb/cockroach"
                    }
                ],
                "maintainers": [
                    {
                        "email": "alex@cockroachlabs.com",
                        "name": "a-robinson"
                    },
                    {
                        "email": "dmesser@redhat.com",
                        "name": "Daniel Messer"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.8.0",
                "provider": {
                    "name": "Helm Community"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "example.com/myrepo/cockroachdb-bundle@sha256:f0dbb418f5cd35a3f856d6515a83fe6fe3bd1645bec00222e9ab0a88c51bc062"
        },
        {
            "name": "",
            "image": "quay.io/helmoperators/cockroachdb:v2.1.11"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "cockroachdb.v3.0.7",
    "package": "cockroachdb",
    "image": "example.com/myrepo/cockroachdb-bundle@sha256:6a15f0f72090d4ef4ffd73bd2c8b735619e7fef2258320eebfb6df317b2ec281",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "charts.helm.k8s.io",
                "kind": "Cockroachdb",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.maxOpenShiftVersion",
            "value": "4.8"
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cockroachdb",
                "version": "3.0.7"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"charts.helm.k8s.io/v1alpha1\",\n    \"kind\": \"Cockroachdb\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": {\n      \"image\": {\n        \"repository\": \"cockroachdb/cockroach\",\n        \"tag\": \"v19.2.5\",\n        \"pullPolicy\": \"IfNotPresent\",\n        \"credentials\": {\n        }\n      },\n      \"labels\": {\n      },\n      \"clusterDomain\": \"cluster.local\",\n      \"conf\": {\n        \"attrs\": [\n\n        ],\n        \"cache\": \"25%\",\n        \"cluster-name\": \"\",\n        \"disable-cluster-name-verification\": false,\n        \"join\": [\n\n        ],\n        \"logtostderr\": \"INFO\",\n        \"max-disk-temp-storage\": 0,\n        \"max-offset\": \"500ms\",\n        \"max-sql-memory\": \"25%\",\n        \"locality\": \"\",\n        \"single-node\": false,\n        \"sql-audit-dir\": \"\",\n        \"port\": 26257,\n        \"http-port\": 8080\n      },\n      \"statefulset\": {\n        \"replicas\": 3,\n        \"updateStrategy\": {\n          \"type\": \"RollingUpdate\"\n        },\n        \"podManagementPolicy\": \"Parallel\",\n        \"budget\": {\n          \"maxUnavailable\": 1\n        },\n        \"args\": [\n\n        ],\n        \"env\": [\n\n        ],\n        \"secretMounts\": [\n\n        ],\n        \"labels\": {\n          \"app.kubernetes.io/component\": \"cockroachdb\"\n        },\n        \"annotations\": {\n        },\n        \"nodeAffinity\": {\n        },\n        \"podAffinity\": {\n        },\n        \"podAntiAffinity\": {\n          \"type\": \"soft\",\n          \"weight\": 100\n        },\n        \"nodeSelector\": {\n        },\n        \"tolerations\": [\n\n        ],\n        \"resources\": {\n        }\n      },\n      \"service\": {\n        \"ports\": {\n          \"grpc\": {\n            \"external\": {\n              \"port\": 26257,\n              \"name\": \"grpc\"\n            },\n            \"internal\": {\n              \"port\": 26257,\n              \"name\": \"grpc-internal\"\n            }\n          },\n          \"http\": {\n            \"port\": 8080,\n            \"name\": \"http\"\n          }\n        },\n        \"public\": {\n          \"type\": \"ClusterIP\",\n          \"labels\": {\n            \"app.kubernetes.io/component\": \"cockroachdb\"\n          },\n          \"annotations\": {\n          }\n        },\n        \"discovery\": {\n          \"labels\": {\n            \"app.kubernetes.io/component\": \"cockroachdb\"\n          },\n          \"annotations\": {\n          }\n        }\n      },\n      \"storage\": {\n        \"hostPath\": \"\",\n        \"persistentVolume\": {\n          \"enabled\": true,\n          \"size\": \"100Gi\",\n          \"storageClass\": \"\",\n          \"labels\": {\n          },\n          \"annotations\": {\n          }\n        }\n      },\n      \"init\": {\n        \"labels\": {\n          \"app.kubernetes.io/component\": \"init\"\n        },\n        \"annotations\": {\n        },\n        \"affinity\": {\n        },\n        \"nodeSelector\": {\n        },\n        \"tolerations\": [\n\n        ],\n        \"resources\": {\n        }\n      },\n      \"tls\": {\n        \"enabled\": false,\n        \"serviceAccount\": {\n          \"create\": true,\n          \"name\": \"\"\n        },\n        \"certs\": {\n          \"provided\": false,\n          \"clientRootSecret\": \"cockroachdb-root\",\n          \"nodeSecret\": \"cockroachdb-node\",\n          \"tlsSecret\": false\n        },\n        \"init\": {\n          \"image\": {\n            \"repository\": \"cockroachdb/cockroach-k8s-request-cert\",\n            \"tag\": \"0.4\",\n            \"pullPolicy\": \"IfNotPresent\",\n            \"credentials\": {\n            }\n          }\n        }\n      },\n      \"networkPolicy\": {\n        \"enabled\": false,\n        \"ingress\": {\n          \"grpc\": [\n\n          ],\n          \"http\": [\n\n          ]\n        }\n      }\n    }\n  }\n]\n",
                    "capabilities": "Basic Install",
                    "categories": "Database",
                    "certified": "false",
                    "containerImage": "quay.io/helmoperators/cockroachdb:v3.0.7",
                    "createdAt": "2020-06-22T15-00-00Z",
                    "description": "CockroachDB Operator based on the CockroachDB helm chart",
                    "olm.properties": "[{\"type\": \"olm.maxOpenShiftVersion\", \"value\": \"4.8\"}]",
                    "repository": "https://github.com/dmesser/cockroachdb-operator",
                    "support": "a-robinson"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "description": "Represents a CockroachDB cluster",
                            "displayName": "CockroachDB",
                            "kind": "Cockroachdb",
                            "name": "cockroachdbs.charts.helm.k8s.io",
                            "resources": [
                                {
                                    "kind": "Deployment",
                                    "name": "",
                                    "version": "apps/v1"
                                },
                                {
                                    "kind": "Service",
                                    "name": "",
                                    "version": "v1"
                                },
                                {
                                    "kind": "ReplicaSet",
                                    "name": "",
                                    "version": "apps/v1"
                                },
                                {
                                    "kind": "Pod",
                                    "name": "",
                                    "version": "v1"
                                },
                                {
                                    "kind": "Secret",
                                    "name": "",
                                    "version": "v1"
                                },
                                {
                                    "kind": "ConfigMap",
                                    "name": "",
                                    "version": "v1"
                                },
                                {
                                    "kind": "PersistentVolumeClaim",
                                    "name": "",
                                    "version": "v1"
                                },
                                {
                                    "kind": "StatefulSet",
                                    "name": "",
                                    "version": "apps/v1"
                                },
                                {
                                    "kind": "Job",
                                    "name": "",
                                    "version": "batch/v1"
                                }
                            ],
                            "version": "v1alpha1"
                        }
                    ]
                },
                "description": "CockroachDB is a scalable, survivable, strongly-consistent SQL database.\n\n## About this Operator\n\nThis Operator is based on a Helm chart for CockroachDB. It supports reconfiguration for some parameters, but notably does not handle scale down of the replica count in a seamless manner. Scale up works great.\n\n## Core capabilities\n* **StatefulSet** - Sets up a dynamically scalable CockroachDB cluster using a Kubernetes StatefulSet\n* **Expand Replicas** - Supports expanding the set of replicas by simply editing your object\n* **Dashboard** - Installs the CockroachDB user interface to administer your cluster. Easily expose it via an Ingress rule.\n\nReview all of the [confiuguration options](https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration) to best run your database instance. The example configuration is derived from the chart's [`values.yaml`](https://github.com/helm/charts/blob/master/stable/cockroachdb/values.yaml).\n\n## Using the cluster\n\nThe resulting cluster endpoint can be consumed from a `Service` that follows the pattern: `<StatefulSet-name>-public`. For example to connect using the command line client, use something like the following to obtain the name of the service:\n\n```\nkubectl get service -l chart=cockroachdb-3.0.7\nNAME                                           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)              AGE\nexample-9f8ngwzrxbxrulxqmdqfhn51h-cdb          ClusterIP   None             <none>        26257/TCP,8080/TCP   24m\nexample-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public   ClusterIP   10.106.249.134   <none>        26257/TCP,8080/TCP   24m\n```\n\nThen you can use the CockroachDB command line client to connect to the database cluster:\n\n```\nkubectl run -it --rm cockroach-client --image=cockroachdb/cockroach --restart=Never --command -- ./cockroach sql --insecure --host example-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public\n```\n\n## Before you start\n\nThis Operator requires a cluster with PV support in order to run correctly.\n\n## Supported configuration parameters\n\n| Parameter                                | Description                                                     | Default                                          |\n| ---------                                | -----------                                                     | -------                                          |\n| `clusterDomain`                          | Cluster's default DNS domain                                    | `cluster.local`                                  |\n| `conf.attrs`                             | CockroachDB node attributes                                     | `[]`                                             |\n| `conf.cache`                             | Size of CockroachDB's in-memory cache                           | `25%`                                            |\n| `conf.cluster-name`                      | Name of CockroachDB cluster                                     | `\"\"`                                             |\n| `conf.disable-cluster-name-verification` | Disable CockroachDB cluster name verification                   | `no`                                             |\n| `conf.join`                              | List of already-existing CockroachDB instances                  | `[]`                                             |\n| `conf.max-disk-temp-storage`             | Max storage capacity for temp data                              | `0`                                              |\n| `conf.max-offset`                        | Max allowed clock offset for CockroachDB cluster                | `500ms`                                          |\n| `conf.max-sql-memory`                    | Max memory to use processing SQL queries                        | `25%`                                            |\n| `conf.locality`                          | Locality attribute for this deployment                          | `\"\"`                                             |\n| `conf.single-node`                       | Disable CockroachDB clustering (standalone mode)                | `no`                                             |\n| `conf.sql-audit-dir`                     | Directory for SQL audit log                                     | `\"\"`                                             |\n| `conf.port`                              | CockroachDB primary serving port in Pods                        | `26257`                                          |\n| `conf.http-port`                         | CockroachDB HTTP port in Pods                                   | `8080`                                           |\n| `image.repository`                       | Container image name                                            | `cockroachdb/cockroach`                  |\n| `image.tag`                              | Container image tag                                             | `v19.2.5`                                |\n| `image.pullPolicy`                       | Container pull policy                                           | `IfNotPresent`                                   |\n| `image.credentials`                      | `registry`, `user` and `pass` credentials to pull private image | `{}`                                             |\n| `statefulset.replicas`                   | StatefulSet replicas number                                     | `3`                                              |\n| `statefulset.updateStrategy`             | Update strategy for StatefulSet Pods                            | `{\"type\": \"RollingUpdate\"}`                      |\n| `statefulset.podManagementPolicy`        | `OrderedReady`/`Parallel` Pods creation/deletion order          | `Parallel`                                       |\n| `statefulset.budget.maxUnavailable`      | k8s PodDisruptionBudget parameter                               | `1`                                              |\n| `statefulset.args`                       | Extra command-line arguments                                    | `[]`                                             |\n| `statefulset.env`                        | Extra env vars                                                  | `[]`                                             |\n| `statefulset.secretMounts`               | Additional Secrets to mount at cluster members                  | `[]`                                             |\n| `statefulset.labels`                     | Additional labels of StatefulSet and its Pods                   | `{\"app.kubernetes.io/component\": \"cockroachdb\"}` |\n| `statefulset.annotations`                | Additional annotations of StatefulSet Pods                      | `{}`                                             |\n| `statefulset.nodeAffinity`               | [Node affinity rules][2] of StatefulSet Pods                    | `{}`                                             |\n| `statefulset.podAffinity`                | [Inter-Pod affinity rules][1] of StatefulSet Pods               | `{}`                                             |\n| `statefulset.podAntiAffinity`            | [Anti-affinity rules][1] of StatefulSet Pods                    | auto                                             |\n| `statefulset.podAntiAffinity.type`       | Type of auto [anti-affinity rules][1]                           | `soft`                                           |\n| `statefulset.podAntiAffinity.weight`     | Weight for `soft` auto [anti-affinity rules][1]                 | `100`                                            |\n| `statefulset.nodeSelector`               | Node labels for StatefulSet Pods assignment                     | `{}`                                             |\n| `statefulset.tolerations`                | Node taints to tolerate by StatefulSet Pods                     | `[]`                                             |\n| `statefulset.resources`                  | Resource requests and limits for StatefulSet Pods               | `{}`                                             |\n| `service.ports.grpc.external.port`       | CockroachDB primary serving port in Services                    | `26257`                                          |\n| `service.ports.grpc.external.name`       | CockroachDB primary serving port name in Services               | `grpc`                                           |\n| `service.ports.grpc.internal.port`       | CockroachDB inter-communication port in Services                | `26257`                                          |\n| `service.ports.grpc.internal.name`       | CockroachDB inter-communication port name in Services           | `grpc-internal`                                  |\n| `service.ports.http.port`                | CockroachDB HTTP port in Services                               | `8080`                                           |\n| `service.ports.http.name`                | CockroachDB HTTP port name in Services                          | `http`                                           |\n| `service.public.type`                    | Public Service type                                             | `ClusterIP`                                      |\n| `service.public.labels`                  | Additional labels of public Service                             | `{\"app.kubernetes.io/component\": \"cockroachdb\"}` |\n| `service.public.annotations`             | Additional annotations of public Service                        | `{}`                                             |\n| `service.discovery.labels`               | Additional labels of discovery Service                          | `{\"app.kubernetes.io/component\": \"cockroachdb\"}` |\n| `service.discovery.annotations`          | Additional annotations of discovery Service                     | `{}`                                             |\n| `storage.hostPath`                       | Absolute path on host to store data                             | `\"\"`                                             |\n| `storage.persistentVolume.enabled`       | Whether to use PersistentVolume to store data                   | `yes`                                            |\n| `storage.persistentVolume.size`          | PersistentVolume size                                           | `100Gi`                                          |\n| `storage.persistentVolume.storageClass`  | PersistentVolume class                                          | `\"\"`                                             |\n| `storage.persistentVolume.labels`        | Additional labels of PersistentVolumeClaim                      | `{}`                                             |\n| `storage.persistentVolume.annotations`   | Additional annotations of PersistentVolumeClaim                 | `{}`                                             |\n| `init.labels`                            | Additional labels of init Job and its Pod                       | `{\"app.kubernetes.io/component\": \"init\"}`        |\n| `init.annotations`                       | Additional labels of the Pod of init Job                        | `{}`                                             |\n| `init.affinity`                          | [Affinity rules][2] of init Job Pod                             | `{}`                                             |\n| `init.nodeSelector`                      | Node labels for init Job Pod assignment                         | `{}`                                             |\n| `init.tolerations`                       | Node taints to tolerate by init Job Pod                         | `[]`                                             |\n| `init.resources`                         | Resource requests and limits for the Pod of init Job            | `{}`                                             |\n| `tls.enabled`                            | Whether to run securely using TLS certificates                  | `no`                                             |\n| `tls.serviceAccount.create`              | Whether to create a new RBAC service account                    | `yes`                                            |\n| `tls.serviceAccount.name`                | Name of RBAC service account to use                             | `\"\"`                                             |\n| `tls.certs.provided`                     | Bring your own certs scenario, i.e certificates are provided    | `no`                                             |\n| `tls.certs.clientRootSecret`             | If certs are provided, secret name for client root cert         | `cockroachdb-root`                               |\n| `tls.certs.nodeSecret`                   | If certs are provided, secret name for node cert                | `cockroachdb-node`                               |\n| `tls.certs.tlsSecret`                    | Own certs are stored in TLS secret                              | `no`                                             |\n| `tls.init.image.repository`              | Image to use for requesting TLS certificates                    | `cockroachdb/cockroach-k8s-request-cert` |\n| `tls.init.image.tag`                     | Image tag to use for requesting TLS certificates                | `0.4`                                    |\n| `tls.init.image.pullPolicy`              | Requesting TLS certificates container pull policy               | `IfNotPresent`                                   |\n| `tls.init.image.credentials`             | `registry`, `user` and `pass` credentials to pull private image | `{}`                                             |\n| `networkPolicy.enabled`                  | Enable NetworkPolicy for CockroachDB's Pods                     | `no`                                             |\n| `networkPolicy.ingress.grpc`             | Whitelist resources to access gRPC port of CockroachDB's Pods   | `[]`                                             |\n| `networkPolicy.ingress.http`             | Whitelist resources to access gRPC port of CockroachDB's Pods   | `[]`                                             |\n\n## Upgrading the cluster\n\nAssuming the name of the `CockroachDB` instance is `example`, follow the steps below to update to a newer version (example used os v19.2.5->v19.2.7) of CockroachDB:\n\nLaunch a temporary interactive pod and start the built-in SQL client:\n```shell\nkubectl run cockroachdb --rm -it \\\n--image=cockroachdb/cockroach \\\n--restart=Never \\\n-- sql --insecure --host=example-cockroachdb-public\n```\n\n> If you are running in secure mode, you will have to provide a client certificate to the cluster in order to authenticate, so the above command will not work. See [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/client-secure.yaml) for an example of how to set up an interactive SQL shell against a secure cluster or [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/example-app-secure.yaml) for an example application connecting to a secure cluster.\n\nSet `cluster.preserve_downgrade_option`, where `$current_version` is the CockroachDB version currently running (e.g., `19.2`):\n```sql\n> SET CLUSTER SETTING cluster.preserve_downgrade_option = '$current_version';\n```\n\nExit the shell and delete the temporary pod:\n```sql\n> \\q\n```\n\nKick off the upgrade process by changing the new Docker image, where `$new_version` is the CockroachDB version to which you are upgrading:\n```shell\nkubectl delete job example-cockroachdb-init\n```\n```shell\nkubectl patch cockroachdbs example -p '{\"spec\": {\"image\":{\"tag\":\"v19.2.7\"}}}' --type merge\n```\n\nKubernetes will carry out a safe [rolling upgrade](https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets) of your CockroachDB nodes one-by-one. Monitor the cluster's pods until all have been successfully restarted:\n```shell\nkubectl get pods\n```\n```\nNAME                                READY     STATUS              RESTARTS   AGE\nexample-cockroachdb-0            1/1       Running             0          2m\nexample-cockroachdb-1            1/1       Running             0          3m\nexample-cockroachdb-2            1/1       Running             0          3m\nexample-cockroachdb-3            0/1       ContainerCreating   0          25s\nexample-cockroachdb-init-nwjkh   0/1       ContainerCreating   0          6s\n```\n```shell\nkubectl get pods \\\n-o jsonpath='{range .items[*]}{.metadata.name}{\"\\t\"}{.spec.containers[0].image}{\"\\n\"}'\n```\n```\nexample-cockroachdb-0    cockroachdb/cockroach:v19.2.7\nexample-cockroachdb-1    cockroachdb/cockroach:v19.2.7\nexample-cockroachdb-2    cockroachdb/cockroach:v19.2.7\n```\n\nResume normal operations. Once you are comfortable that the stability and performance of the cluster is what you'd expect post-upgrade, finalize the upgrade:\n```shell\nkubectl run cockroachdb --rm -it \\\n--image=cockroachdb/cockroach \\\n--restart=Never \\\n-- sql --insecure --host=example-cockroachdb-public\n```\n```sql\n> RESET CLUSTER SETTING cluster.preserve_downgrade_option;\n> \\q\n```\n",
                "displayName": "CockroachDB",
                "installModes": [
                    {
                        "supported": true,
                        "type": "OwnNamespace"
                    },
                    {
                        "supported": true,
                        "type": "SingleNamespace"
                    },
                    {
                        "supported": false,
                        "type": "MultiNamespace"
                    },
                    {
                        "supported": true,
                        "type": "AllNamespaces"
                    }
                ],
                "keywords": [
                    "cockroach",
                    "cockroachdb"
                ],
                "links": [
                    {
                        "name": "Helm Chart Source",
                        "url": "https://github.com/helm/charts/tree/master/stable/cockroachdb"
                    },
                    {
                        "name": "Configuration Options",
                        "url": "https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration"
                    },
                    {
                        "name": "CockroachDB Source",
                        "url": "https://github.com/cockroachdb/cockroach"
                    }
                ],
                "maintainers": [
                    {
                        "email": "alexdwanerobinson@gmail.com",
                        "name": "a-robinson"
                    },
                    {
                        "email": "Joel.A.Kenny@gmail.com",
                        "name": "DuskEagle"
                    },
                    {
                        "email": "joshimhoff13@gmail.com",
                        "name": "joshimhoff"
                    },
                    {
                        "email": "keith.mcclellan@gmail.com",
                        "name": "keith-mcclellan"
                    },
                    {
                        "email": "dmesser@redhat.com",
                        "name": "Daniel Messer"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.8.0",
                "provider": {
                    "name": "Helm Community"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "example.com/myrepo/cockroachdb-bundle@sha256:6a15f0f72090d4ef4ffd73bd2c8b735619e7fef2258320eebfb6df317b2ec281"
        },
        {
            "name": "",
            "image": "quay.io/helmoperators/cockroachdb:v3.0.7"
        }
    ]
}
